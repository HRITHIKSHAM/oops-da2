DIGITAL ASSIGNMENT

NAME: HRITHIK SHAM D H
REG NO: 22BRS1105

CAT PAPER 2

1.

#include <stdio.h>
void divide(int arr[], int start, int end, int* count)
{
    if (start == end) 
    {
        return;
    }
    int mid = (start + end) / 2;
    divide(arr, start, mid, count);
    (*count)++;
    divide(arr, mid + 1, end, count);
}
int main() 
{
    int arr[] = {1, 2, 3, 4, 5, 6};
    int n = sizeof(arr) / sizeof(int);
    int count = 0;
    divide(arr, 0, n - 1, &count);
    printf("Number of iterations: %d\n", count);
    
    return 0;
}

2.

#include <stdio.h>
#include <ctype.h>
int main() 
{
    char str[] = "Hello 123!";
    int counts[5] = {0}; 
    int i;
    for (i = 0; str[i] != '\0'; i++) 
    {
        char c = str[i];
        if (isupper(c)) 
        {
            printf("%c is an uppercase alphabet\n", c);
            counts[0]++;
        }
        else if (islower(c)) 
        {
            printf("%c is a lowercase alphabet\n", c);
            counts[1]++;
        }
        else if (isdigit(c)) 
        {
            printf("%c is a digit\n", c);
            counts[2]++;
        }
        else if (isspace(c)) 
        {
            printf("%c is a whitespace\n", c);
            counts[3]++;
        }
        else 
        {
            printf("%c is a special symbol\n", c);
            counts[4]++;
        }
    }
    
    printf("Count of uppercase alphabets: %d\n", counts[0]);
    printf("Count of lowercase alphabets: %d\n", counts[1]);
    printf("Count of digits: %d\n", counts[2]);
    printf("Count of whitespaces: %d\n", counts[3]);
    printf("Count of special symbols: %d\n", counts[4]);
    
    return 0;
}

3.

#include <stdio.h>

double calculate_factorial(int n) {
    if (n == 1) {
        return 1;
    } else {
        return n * calculate_factorial(n-1);
    }
}

int main() {
    int n;
    double sum = 0;
    
    printf("Enter the value of n: ");
    scanf("%d", &n);
    
    for (int i = 1; i <= n; i++) {
        sum += calculate_factorial(i) / i;
    }
    
    printf("Sum of the series = %lf\n", sum);
    
    return 0;
}

4.

#include <stdio.h>

int main() {
    char car_type[20];
    float price, extra_fitting, total, discount, gst, net;

    printf("Enter the car type (Hatchback, Sedan, SUV, MUV): ");
    scanf("%s", car_type);

    printf("Enter the price of the car: ");
    scanf("%f", &price);

    printf("Enter the price of extra fittings: ");
    scanf("%f", &extra_fitting);

    if (strcmp(car_type, "Hatchback") == 0) {
        total = price + extra_fitting;
        discount = total * 0.03;
        gst = (total - discount) * 0.12;
        net = total - discount + gst;
    } else if (strcmp(car_type, "Sedan") == 0) {
        total = price + extra_fitting;
        discount = total * 0.05;
        gst = (total - discount) * 0.12;
        net = total - discount + gst;
    } else if (strcmp(car_type, "SUV") == 0) {
        total = price + extra_fitting;
        discount = total * 0.10;
        gst = (total - discount) * 0.12;
        net = total - discount + gst;
    } else if (strcmp(car_type, "MUV") == 0) {
        total = price + extra_fitting;
        discount = total * 0.15;
        gst = (total - discount) * 0.12;
        net = total - discount + gst;
    } else {
        printf("Invalid car type\n");
        return 0;
    }

    printf("Total amount = %.2f\n", total);
    printf("Discount = %.2f\n", discount);
    printf("GST = %.2f\n", gst);
    printf("Net amount = %.2f\n", net);

    return 0;
}

5.

The length of a string is the number of characters in the string, excluding the null terminator,
 while the size of a string is the total number of bytes allocated for the string, including the null terminator.
In other words, the size includes the length plus one for the null terminator.

For the input string "computer programming", the revised string to be printed in the function is "Computer PROGRAMMING".
The length of this string is 20, so the function will return the size of the string, which is also 20.

#include <stdio.h>

void processString(char *inputString);

int main() {
    char inputString[100];

    printf("Enter a sentence with two words: ");
    fgets(inputString, 100, stdin);

    processString(inputString);

    return 0;
}

void processString(char *inputString) 
{

}